class Gcanvas{constructor(a,b,c,d,e,f,g){this.id=a,this.width=b,this.height=c,this.backGroundColor=d,this.parent=e,this.context=f,this.contextAttributes=g,this.canvas,this.init()}init(){this.canvas=document.createElement("canvas");let a=0;return"2d"!=this.context&&"webgl"!=this.context&&"webgl2"!=this.context&&"webgl-experimental"!=this.context?a++:this.canvas.getContext(this.context,this.contextAttributes),1==a?void this.errorLog("correct context was not found"):void(this.canvas.setAttribute("id",this.id),this.canvas.setAttribute("width",this.width),this.canvas.setAttribute("height",this.height),""!=this.backGroundColor&&null!=this.backGroundColor&&null!=this.backGroundColor?this.canvas.style.backgroundColor=this.backGroundColor:(this.canvas.style.backGroundColor="#fff",this.backGroundColor="#fff"),""==this.parent?document.appendChild(this.canvas):document.getElementById(this.parent).appendChild(this.canvas),this.canvas.style.height=this.canvas.height/window.devicePixelRatio+"px",this.canvas.style.width=this.canvas.width/window.devicePixelRatio+"px",0==a&&this.infoLog("Gcanvas successfully initialized"))}drawLine(a,b,c,d,e=2,f="black"){let g=this.canvas.getContext(this.context);g.moveTo(a,b),g.lineTo(c,d),g.lineWidth=e,g.strokeStyle=f,g.stroke()}drawPieChart(a){let b=this.canvas.getContext(this.context),c=0,d=a.data,e=d.length,f=!1,g=a.labels,h=g.length;if((null==g||0==h||null==g)&&(f=!0,this.infoLog("standard labels will be used, since no or empty label array was found")),null!=g&&null!=g&&0<h&&h!=e)return void this.errorLog("data and label arrays do not match");let i=!1,j=a.colors,k=j.length;for(var l in j)this.isValidColor(l)||c++;if(0<c&&this.errorLog("non valid color has been given in color array"),(null==j||null==j||0==k)&&(i=!0,this.infoLog("standard colors will be used, since no or empty color array was found")),null!=j&&null!=j&&0<k&&k!=e)return void this.errorLog("color and data arrays do not match");let m={origin_x:null==a.origin_x?this.width/2:a.origin_x,origin_y:null==a.origin_y?this.height/2:a.origin_y,radius:null==a.radius?10:a.radius},n=0;null!=a.space&&null!=a.space&&"yes"==a.space&&(n=.01);let o=0;for(let b=0;b<e;b++)o+=d[b];let p=0;for(let c=0;c<e;c++){let a=this.calcPercentOfWhole(o,d[c]),e=this.newEndPoint(a,p);b.beginPath(),b.fillStyle=j[c],b.moveTo(m.origin_x,m.origin_y),b.arc(m.origin_x,m.origin_y,m.radius,(p+n)*Math.PI,e*Math.PI),b.fill(),p=e}}drawRingChart(a){let b=this.canvas.getContext(this.context),c=0,d=a.data,e=d.length,f=!1,g=a.labels,h=g.length;if((null==g||0==h||null==g)&&(f=!0,this.infoLog("standard labels will be used, since no or empty label array was found")),null!=g&&null!=g&&0<h&&h!=e)return void this.errorLog("data and label arrays do not match");let i=!1,j=a.colors,k=j.length;for(let b in j)this.isValidColor(b)||c++;if(0<c&&this.errorLog("non valid color has been given in color array"),(null==j||null==j||0==k)&&(i=!0,this.infoLog("standard colors will be used, since no or empty color array was found")),null!=j&&null!=j&&0<k&&k!=e)return void this.errorLog("color and data arrays do not match");let l={origin_x:null==a.origin_x?this.width/2:a.origin_x,origin_y:null==a.origin_y?this.height/2:a.origin_y,radius_max:null==a.radius_max?2*(this.width+this.height):a.radius_max,radius_circle:null==a.radius_circle?20:a.radius_circle},m=0;null!=a.space&&null!=a.space&&"yes"==a.space&&(m=.01);let n=this.totalNumber(d),o=0;for(let c=0;c<e;c++){let a=this.calcPercentOfWhole(n,d[c]),e=this.newEndPoint(a,o);b.beginPath(),b.fillStyle=j[c],b.moveTo(l.origin_x,l.origin_y),b.arc(l.origin_x,l.origin_y,l.radius_max,(o+m)*Math.PI,e*Math.PI),b.fill(),o=e}let p=l.radius_max-l.radius_circle;0<p&&p<l.radius_max&&(b.beginPath(),b.fillStyle=this.backGroundColor,b.globalAlpha=1,b.moveTo(l.origin_x,l.origin_y),b.arc(l.origin_x,l.origin_y,p,0,2*Math.PI),b.fill()),null!=a.legend&&null!=a.legend&&0<this.objectLength(a.legend)&&(this.addLegendToChart("ring",g,f,j,i,a.legend,e,l,d),this.infoLog("legend added"))}drawQuadraticCurve(){var a=[{x:1,y:1},{x:2,y:3},{x:3,y:4},{x:4,y:2},{x:5,y:6}];let b=this.canvas.getContext(this.context);b.moveTo(a[0].x,a[0].y);for(var c=0;c<a.length-1;c++){var d=(a[c].x+a[c+1].x)/2,e=(a[c].y+a[c+1].y)/2,f=(d+a[c].x)/2,g=(d+a[c+1].x)/2;b.quadraticCurveTo(f,a[c].y,d,e),b.quadraticCurveTo(g,a[c+1].y,a[c+1].x,a[c+1].y)}}svgToImage(){}imageToCanvas(){}addLegendToChart(a,b,c,d,e,f,g,h,i){let j=this.canvas.getContext(this.context),k={};if(Object.entries(f).forEach(a=>{const[b,c]=a;k[b]=c}),""==f.origin_x||null==f.origin_x||null==f.origin_x||""==f.origin_y||null==f.origin_y||null==f.origin_y)return void this.errorLog("coordinates for legend not defined or false");let l=document.createElement("div");l.style.border="1px solid black",l.style.width="50px",l.style.height="50px",l.style.position="absolute",l.style.display="none",document.getElementById(this.parent).appendChild(l);let m=[],n=[];if(!1==c)m=b;else if(!0==c)for(let a=1;a<=g;a++)m.push("Label"+a);if(!1==e)n=d;else if(!0==e)for(let a=1;a<=g;a++)n.push("#000");for(let l=0;l<g;l++)j.font=k.fontSize+" "+k.font,j.fillStyle=n[l],j.fillRect(k.origin_x-parseInt(k.fontSize.replace("px",""))/2,k.origin_y-parseInt(k.fontSize.replace("px",""))/2,parseInt(k.fontSize.replace("px",""))/2.5,parseInt(k.fontSize.replace("px",""))/2.5),j.fillStyle=k.textColor,j.fillText(m[l],k.origin_x,k.origin_y),k.origin_y+=parseInt(k.fontSize.replace("px",""));this.canvas.addEventListener("mousemove",a=>{let b=this.canvas.getBoundingClientRect(),c=this.canvas.width/b.width,d=this.canvas.height/b.height,e={x:(a.clientX-b.left)*c,y:(a.clientY-b.top)*d};if(console.log(a.pageX+" "+e.x),l.style.left=e.x+"px",l.style.top=e.y+"px",this.isInsideRing(h.origin_x,h.origin_y,e.x,e.y,h.radius_circle,h.radius_max)){let a={x:h.origin_x+h.radius_max-h.origin_x,y:0},b={x:e.x-h.origin_x,y:e.y-h.origin_y};const c=a.x*b.x+a.y*b.y,d=Math.sqrt(a.x*a.x+a.y*a.y)*Math.sqrt(b.x*b.x+b.y*b.y);let f=Math.acos(c/d)*(180/Math.PI);0>b.y&&(f=360-f);let g=100*f/360,j=0,k=!1,m=0;for(;!1==k;){let a=this.totalNumber(i),b=this.calcPercentOfWhole(a,i[j]);g<=b+m?k=!0:(m+=b,j++)}l.style.display="",console.log(a.x+" "+a.y+" "+b.x+" "+b.y+" "+f+" "+g+" "+j)}else l.style.display="none"})}calcPercentOfWhole(a,b){return 100*b/a}newEndPoint(a,b){return b+2/100*a}isValidColor(a){let b=new Option().style;return b.color=a,""!==b.color}drawPieSlice(){}objectLength(a){return Object.keys(a).length}totalNumber(a){let b=0;for(let c=0;c<a.length;c++)b+=a[c];return b}isInsideCircle(d,e,f,g,h){let i=Math.abs(d-f),a=Math.abs(e-g),b=Math.sqrt(i*i+a*a);return b<=h}isInsideRing(a,b,c,d,e,f){let g=this.isInsideCircle(a,b,c,d,f),h=this.isInsideCircle(a,b,c,d,f-e);return g&&!h}errorLog(a){console.error("%cERROR: "+a,"color: red")}infoLog(a){console.log(a)}}console.log("Gcanvas Version 0.0.3");